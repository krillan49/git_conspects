puts '                            Синхронизация веток форк-репозитория с изначальным'

# В Гитхабе в форк-репозитории надпись над файлами:
"This branch is 1 commit ahead of, 2 commits behind o-200/silver-palm-tree:main"
# o-200              - владелец изначального репозитория
# silver-palm-tree   - имя репозитория
# main               - имя ветки

# Надо чтобы в этой строке не было надписи "behind", ведь она обозначает, что эта ветка устаревшая и нужно актуализировать данные, тогда надпись станет:
"This branch is up to date with o-200/silver-palm-tree:main"

# Проблема в том, что возможны конфликты если изменения в форк-репозитории идут поверх изменений в главном репозитории или если несколько веток сразу будет вливаться с кучей изменений. В таких случаях обычно просят исполнителя (форк-репозиторий) актуализировать ветку.

# Как актуализировать ветку:
# 1) Выбрать main ветку в форк-репозитории на Гитхаб и нажать на "Sync fork" -> "Update Branch". После этого main ветка fork-репозтория будет актуальна с main веткой основного репозитория.
# 2) На локальном репозитории(у себя на компьютере):
# $ git checkout main                     - зайти на ветку main
# $ git pull                              - добавить изменения с актуализированного форк-репозитория
# Теперь локальная ветка main будет актуальна с веткой main нашего fork-репозтория, который ранее актуализировался с основным

# Если до актуализации репозиториев с форк-репозиторием были сделаны новые коммиты из других веток и отправленны пулл реквесты, а в основном репозитории тоже сделанны новые коммиты, то получается новая ветка в форк-репозитории создавалась и в нее делались коммиты относительно устаревшей main-ветки:
# 3) Зайти на ветку с задачей и выполнить команду, которая зальет изменения на эту ветку (?? о том, что ветка мэйн актуализированна ??)
# $ git merge --no-ff main
# ?? Если используем git pull(или git merge --no-ff main) уже после того как внесли новые изменения в локальный репозиторий и сделали новый коммит, то выведет текстовый редактор и попросит смежить - нужно ввести текст это будет текст сообщения для коммита с мержем и потом нажать 2 раза ctrl+c и написать :wq! и нажать энтер

# Так ветки станут актуальны и после git push должно пропасть сообщение о том, что ветки не актуальны



puts '                                   Удаление ветки со своего Гитхаб'

# На странице репозитория перейдите по ссылке "View all branches" -> "Delete branch"(значек мусорки напротив имени ветки).
# Нет никаких проверок на наличие неотредактированных изменений, поэтому GitHub просто удалит ветку немедленно.
















#
