puts '                                            Пуши веток'

# Пушим новые коммиты только определенной ветки ?? и заодно создаем связанную на нашем удаленном репозитории ??
# $ git push -u some_branch            - пушим изменения только с ветки some_branch

# Пушим новую ветку с коммитом если ее еще нет в нашем удаленном репоитории, когда она уже есть будем пушить обычно (это всегда или только когда форкнутый репозиторий ??)
# $ git push --set-upstream origin 6#rename-main-to-home
# 6#rename-main-to-home - название ветки



puts '                                              fetch'

# fetch - команда обновляет инфу по веткам, чтобы при "git branch -a" локально отображались ветки кемто добавленные на GitHub (наш??)

# Если мы посмотрим какие у нас ветки в проекте, то покажет и к каким веткам они привязаны и в GitHub
# $ git branch -a
#=>
# * master
#   remotes/ogigin/HEAD -> origin/master
#   remotes/ogigin/master

# $ git fetch              - обновит инфу по веткам

# $ git branch -a
#=>
# * master
#   remotes/ogigin/HEAD -> origin/master
#   remotes/ogigin/some_branch
#   remotes/ogigin/master


puts '                              Привязка новой локальной ветки к удаленной'

# По умолчанию, когда мы привязываем локальный репозиторий у репозиторию удаленному, то привязываем локальную ветку main к удаленной ветке main, чтобы при пуше все изменения в этой ветке отправлялись на main удаленного репозитория. Точно такую же привязку, если нужно, можно делать и с другими ветками локального и удаленного репозитория


# Чтобы привязать ветку, что есть на GitHub к какой-тио нашей локальной, нужно:

# 1. создать локальную ветку с тем же названием что и удаленная на GitHub, к которой привязываем
# $ git checkout -b some_branch

# 2. Добавим изменения из удаленной ветки в нашу локальную
# $ git pull ogigin some_branch



puts '                                  Удаление ветки из GitHub репозитория'

# 1. Через меню GitHub:
# На странице репозитория перейдите по ссылке "View all branches" -> "Delete branch"(значек мусорки напротив имени ветки).
# Нет никаких проверок на наличие неотредактированных изменений, поэтому GitHub просто удалит ветку немедленно.

# 2. При помощи команды:
# $ git push origin :some_branch              - удалит ветку some_branch с нашего GitHub репозитория














#
