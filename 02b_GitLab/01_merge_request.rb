puts '                                          mege реквест'

# https://docs.gitlab.com/user/project/merge_requests/creating_merge_requests/


# Merge Request (MR) в GitLab для ревью кода:

# 1. Если ты работаешь в новой ветке (например, feature/add-new-button), сначала запушь её на GitLab:
# $ git push origin feature/add-new-button

# 2.Открой GitLab и перейди в репозиторий
# Перейди на gitlab.com или в свою GitLab-инстанцию (если self-hosted), затем:
# Найди нужный проект.
# Перейди в раздел `Repository` → `Branches` или просто открой главную страницу репозитория.

# 3. Нажми "Create merge request"
# После пуша новой ветки GitLab обычно показывает баннер: "You pushed to feature/add-new-button. Create a merge request?"
# Нажми на кнопку "Create merge request".
# Если баннера нет, нажми: В меню: `Merge requests` → `New merge request`
# Выбери:
# `Source branch` – твоя ветка (например, feature/add-new-button)
# `Target branch` – куда мёржить (чаще всего main, master или develop)
# Нажми `Compare branches and continue`

# 4. Заполни информацию о MR:
# Title — кратко, что делает MR (например, Add new button to navbar)
# Description — что было сделано, зачем, ссылки на тикеты (Jira, GitLab Issues и т.п.)
# Assign — назначь себя или ревьюера
# Reviewer(s) — выбери ревьюеров, если нужно
# Labels, Milestone — по желанию

# 5. Нажми "Create merge request"
# После этого MR появится в списке `Merge Requests` и будет доступен для кода-ревью.

# 6. Дополнительно
# Если настроены CI/CD пайплайны, они запустятся автоматически.
# Можно обсуждать MR в комментариях.
# После аппрува ревьюером можешь нажать "Merge", если разрешено.



puts '                              ДСМЛ. Ревью кода: памятка для разработчика'

# Ревью кода — это просмотр кода коллегой для его улучшения и устранения возможных ошибок. Ревью кода преследует следующие цели:
# * Обмен знаниями — помогает лучше разобраться в проекте, посмотреть на новые для себя вещи.
# * Улучшение консистентности и читаемости кода — помогает писать код, который не требует большого труда для понимания.
# * Уменьшение случайных ошибок — помогает меньше волноваться о возникающих "пожарах".

# Золотые правила ревью кода
# * Будьте вежливы, предполагайте лучшие намерения собеседника.
# * Говорите о коде, не о собеседнике.
# * Если код в общем улучшает здоровье кодовой базы — его стоит принять.

# Как отправить код на ревью (Работа ведётся с помощью т.н. мёрдж реквестов.)
# 1. Выбрать задачу.
# 2. Создать ветку в git: git checkout -b . Заместо нужно выбрать осмысленное название, чтобы задачу возможно было найти по названию ветки.
# 3. Написать код, закоммитить в ветку: git commit -a -m "My message".
# 4. Запушить ветку в репозиторий: git push -u origin .
# 5. Создать merge request по ссылке в терминале (документация, если не получается).
# 6. Просмотреть свои изменения кода в мёрдж реквесте на вкладке Changes.
# 7. Запросить ревью кода, поставив ответственного под "Reviewer" в правой части экрана.
# 8. Внести правки по комментариям и исправлениям.
# 9. Получить одобрение мёрдж реквеста (Approve).
# 10. Влить merge request в master.

# Устранение проблем
# 1. Нет возможности создать merge request
# Доступность мёрдж реквестов определяется наличием кнопки `Merge requests` во вкладке `Code` в левой части интерфейса. В некоторых репозиториях деактивирована фича мёрдж реквестов. Если вы не видите кнопку для них, то нужно активировать эту фичу в `Settings` -> `General` -> `Visibility, project features, permissions` -> `Merge requests`



puts '                                       Ревью от нескольких человек'

# Чтобы назначить ревьюера, он должен быть участником проекта с правами Developer или выше (Проверь роли в Project ➝ Members)

# Если ты не видишь поле Reviewers, возможно, используется старая версия GitLab или другой рабочий процесс (например, с Assignee вместо Reviewer — это разные поля)


# Чтобы добавить ревьюера в уже существующий Merge Request на GitLab:

# 1. Открой Merge Request, в который нужно добавить ревьюера.
# В правой колонке найди секцию Reviewers
# Нажми значок "карандаш" рядом с "Reviewers"

# 2 (Новые версии Гитлаб)
# В выпадающем списке выбери нужного пользователя (или нескольких)
# Нажми "Save changes"
# После этого GitLab отправит уведомления этим людям, и они смогут оставить review.

# Через терминал (GitLab CLI glab):
# $ glab mr update <MR_ID> --reviewer username1,username2
# Замените <MR_ID> на номер или URL Merge Request, а username1 — на логины пользователей в GitLab.



# 2 (Старые версии GitLab CE/EE) Если при добавлении ревьюеров в GitLab не удаётся выбрать сразу двух, новый ревьюер заменяет старого, нет кнопки "Save changes", то, скорее всего:
# Проект использует устаревший механизм Assignée вместо Reviewers
# В старых или нестандартно настроенных GitLab-проектах может использоваться только поле Assignee, и одновременно может быть выбран только один человек.
# Решение: переключить рабочий процесс на использование Reviewers (если доступно) или добавить ревьюеров в комментариях / через упоминания.

# Упомяни ревьюеров вручную в комментарии: @user1 @user2 — это неофициально, но эффективно
# Упомяни вручную в комментарии Просто добавь в MR комментарий:
# @user1 @user2 прошу посмотреть MR
# — они получат уведомление и смогут сделать ревью, даже если не указаны как Reviewer.

# Чтобы отметить человека (тегнуть) в GitLab и попросить его поучаствовать в ревью, достаточно упомянуть его с помощью @username в комментарии или описании Merge Request'а:
# Открой Merge Request
# Перейди в поле комментария (или Description MR)
# Напиши сообщение, упомянув пользователя:
# @ivanov посмотри, пожалуйста, этот MR
# Нажми Comment — пользователь получит уведомление.
# Можно тегнуть сразу нескольких:
# @ivanov @petrov @sidorov нужен ваш фидбэк

# Упомянутый получит уведомление:
# по email (если включено),
# в самом GitLab
# в Slack, если настроена интеграция.

# Если нужного пользователя нет в списке при вводе @ в GitLab:
# Он не добавлен в проект. GitLab показывает и позволяет тегать только участников проекта или группы.
# Добавь пользователя в проект:
# Перейди в проект → "Project information" → "Members".
# Нажми "Invite members".
# Введи его ник (или email).  URL: https://gitlab.com/ivan_petrov → его ник — ivan_petrov.
# Выбери роль (например, Developer или Reporter).
# Нажми "Invite"

# После этого он появится в списке при @