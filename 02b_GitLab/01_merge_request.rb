puts '                                          mege реквест'

# https://docs.gitlab.com/user/project/merge_requests/creating_merge_requests/


# Merge Request (MR) в GitLab для ревью кода:

# 1. Если ты работаешь в новой ветке (например, feature/add-new-button), сначала запушь её на GitLab:
# $ git push origin feature/add-new-button

# 2.Открой GitLab и перейди в репозиторий
# Перейди на gitlab.com или в свою GitLab-инстанцию (если self-hosted), затем:
# Найди нужный проект.
# Перейди в раздел `Repository` → `Branches` или просто открой главную страницу репозитория.

# 3. Нажми "Create merge request"
# После пуша новой ветки GitLab обычно показывает баннер: "You pushed to feature/add-new-button. Create a merge request?"
# Нажми на кнопку "Create merge request".
# Если баннера нет, нажми: В меню: `Merge requests` → `New merge request`
# Выбери:
# `Source branch` – твоя ветка (например, feature/add-new-button)
# `Target branch` – куда мёржить (чаще всего main, master или develop)
# Нажми `Compare branches and continue`

# 4. Заполни информацию о MR:
# Title — кратко, что делает MR (например, Add new button to navbar)
# Description — что было сделано, зачем, ссылки на тикеты (Jira, GitLab Issues и т.п.)
# Assign — назначь себя или ревьюера
# Reviewer(s) — выбери ревьюеров, если нужно
# Labels, Milestone — по желанию

# 5. Нажми "Create merge request"
# После этого MR появится в списке `Merge Requests` и будет доступен для кода-ревью.

# 6. Дополнительно
# Если настроены CI/CD пайплайны, они запустятся автоматически.
# Можно обсуждать MR в комментариях.
# После аппрува ревьюером можешь нажать "Merge", если разрешено.



puts '                              ДСМЛ. Ревью кода: памятка для разработчика'

# Ревью кода — это просмотр кода коллегой для его улучшения и устранения возможных ошибок. Ревью кода преследует следующие цели:
# * Обмен знаниями — помогает лучше разобраться в проекте, посмотреть на новые для себя вещи.
# * Улучшение консистентности и читаемости кода — помогает писать код, который не требует большого труда для понимания.
# * Уменьшение случайных ошибок — помогает меньше волноваться о возникающих "пожарах".

# Золотые правила ревью кода
# * Будьте вежливы, предполагайте лучшие намерения собеседника.
# * Говорите о коде, не о собеседнике.
# * Если код в общем улучшает здоровье кодовой базы — его стоит принять.

# Как отправить код на ревью (Работа ведётся с помощью т.н. мёрдж реквестов.)
# 1. Выбрать задачу.
# 2. Создать ветку в git: git checkout -b . Заместо нужно выбрать осмысленное название, чтобы задачу возможно было найти по названию ветки.
# 3. Написать код, закоммитить в ветку: git commit -a -m "My message".
# 4. Запушить ветку в репозиторий: git push -u origin .
# 5. Создать merge request по ссылке в терминале (документация, если не получается).
# 6. Просмотреть свои изменения кода в мёрдж реквесте на вкладке Changes.
# 7. Запросить ревью кода, поставив ответственного под "Reviewer" в правой части экрана.
# 8. Внести правки по комментариям и исправлениям.
# 9. Получить одобрение мёрдж реквеста (Approve).
# 10. Влить merge request в master.

# Устранение проблем
# 1. Нет возможности создать merge request
# Доступность мёрдж реквестов определяется наличием кнопки `Merge requests` во вкладке `Code` в левой части интерфейса. В некоторых репозиториях деактивирована фича мёрдж реквестов. Если вы не видите кнопку для них, то нужно активировать эту фичу в `Settings` -> `General` -> `Visibility, project features, permissions` -> `Merge requests`
